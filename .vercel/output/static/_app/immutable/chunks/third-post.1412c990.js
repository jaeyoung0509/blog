import{S as Bo,i as Qo,s as Zo,F as yi,y as zo,z as Jo,A as Ko,N as Xo,R as $o,g as Vo,d as Yo,B as go,Q as Oo,k as s,q as r,a as c,Z as Ei,e as jo,l as i,m as o,r as n,h as e,c as u,_ as bi,n as m,b as f,J as t,X as la}from"./index.da3d1cc8.js";import{M as ea}from"./mdsvex.c7ff0795.js";function ta(ol){let p,E,b,v,d,h,al,vt,ht,Sl,_t,Et,Dl,bt,ke,W,yt,Ie,q,wt,xe,rl,Wl,Lt,Ae,G,kt,Ue,A,ql,It,xt,Gl,At,Ce,P,Ut,He,nl,$,Ct,Pl,Ht,Tt,Te,O,St,Se,fl,$l,Dt,De,j,Wt,We,cl,M,qt,qe,ul,Ol,Gt,Ge,jl,Fo=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #a6accd">coinbase user-level tx </span></span>
<span class="line"><span style="color: #a6accd">1. withdraw foocoin from user a&#39;s wallet</span></span>
<span class="line"><span style="color: #a6accd">2. withdraw barcoin from user b&#39;s wallet </span></span>
<span class="line"><span style="color: #a6accd">3. deposit foocoin into user b&#39;s wallet </span></span>
<span class="line"><span style="color: #a6accd">4. deposit barcoin into user a&#39;s wallet </span></span></code></pre>`,Ml,_,Fl,Pt,$t,Nl,Ot,jt,Rl,Mt,Ft,Bl,Nt,Pe,Ql,No=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #a6accd">Zeebe </span></span>
<span class="line"><span style="color: #a6accd">AWS step functions</span></span>
<span class="line"><span style="color: #a6accd">Temporal/Cadence</span></span></code></pre>`,Zl,pl,dl,Rt,F,y,Bt,zl,Qt,Zt,Jl,zt,Jt,Kt,Kl,Xt,$e,N,Vt,Oe,R,Yt,je,B,gt,Me,ml,w,Xl,ls,es,Vl,ts,ss,Yl,is,Fe,Q,os,Ne,Z,as,Re,z,rs,Be,U,gl,ns,fs,le,cs,Qe,J,us,Ze,K,ps,ze,X,ds,Je,C,vl,ms,L,ee,vs,hs,te,_s,Es,se,bs,ys,hl,ws,V,ie,Ls,ks,oe,Is,Ke,Y,xs,Xe,H,_l,As,k,ae,Us,Cs,re,Hs,Ts,ne,Ss,Ds,El,Ws,g,fe,qs,Gs,ce,Ps,Ve,ll,$s,Ye,T,bl,Os,I,ue,js,Ms,pe,Fs,Ns,de,Rs,Bs,yl,Qs,el,me,Zs,zs,ve,Js,ge,tl,Ks,lt,S,wl,Xs,x,he,Vs,Ys,_e,gs,li,Ee,ei,ti,Ll,si,sl,be,ii,oi,ye,ai,et,kl,il,ri,tt,we,Ro=`<pre class="shiki poimandres" style="background-color: #1b1e28" tabindex="0"><code><span class="line"><span style="color: #a6accd">Worker: Worker는 Temporal 클러스터와 통신하는 프로세스입니다. Worker는 클러스터에서 작업을 요청하고 결과를 수신합니다. Worker는 다양한 언어로 작성할 수 있으며 다양한 플랫폼에서 실행할 수 있습니다.</span></span>
<span class="line"><span style="color: #a6accd">Client: Client는 Temporal 클러스터와 통신하는 라이브러리입니다. Client는 다양한 언어로 제공되며 다양한 플랫폼에서 사용할 수 있습니다.</span></span>
<span class="line"><span style="color: #a6accd">Activity: Activity는 Worker에서 수행할 수 있는 단위 작업입니다. Activity는 workflow를 구성하는 가장 작은 단위입니다. Activity는 worker에서 실행되며, workflow를 통해 다른 activity와 통신할 수 있습니다.</span></span>
<span class="line"><span style="color: #a6accd">Task: Task는 activity를 구성하는 단위입니다. Task는 retry, cancel, timeout 기능을 제공합니다. Task는 context를 제공합니다.</span></span>
<span class="line"><span style="color: #a6accd">Workflow: Workflow는 activity를 조합하여 만든 작업입니다. Workflow는 복잡한 작업을 수행하는 데 사용됩니다.</span></span>
<span class="line"><span style="color: #a6accd">Domain: Domain은 workflow를 그룹화하는 단위입니다. Domain은 보안, 리소스, 모니터링을 위해 사용됩니다.</span></span>
<span class="line"><span style="color: #a6accd">Schedule: Schedule은 workflow를 일정에 따라 실행하는 단위입니다. Schedule은 workflow를 자동화하는 데 사용됩니다.</span></span>
<span class="line"><span style="color: #a6accd">API: Temporal은 REST API와 gRPC API를 제공합니다. API는 Temporal 클러스터와 통신하는 데 사용됩니다.</span></span>
<span class="line"><span style="color: #a6accd"></span></span></code></pre>`,Le;return{c(){p=s("h2"),E=r("What is Temporal"),b=c(),v=s("ul"),d=s("li"),h=s("code"),al=r("Uber Cadence"),vt=r("의 fork open service"),ht=c(),Sl=s("li"),_t=r("Temporal은 분산 이벤트 워크플로우를 실행하는데 최적화된 완전 관리 서비스"),Et=c(),Dl=s("li"),bt=r("강력한 상태 관리, 워크플로우 재시작 및 오류 처리 기능을 제공"),ke=c(),W=s("h3"),yt=r("More Detail"),Ie=c(),q=s("h4"),wt=r("temporal client"),xe=c(),rl=s("ul"),Wl=s("li"),Lt=r("워크플로우를 시작하고 상태를 확인하고 작업을 완료"),Ae=c(),G=s("h4"),kt=r("temporal server"),Ue=c(),A=s("ul"),ql=s("li"),It=r("워크플로우를 저장 관리"),xt=c(),Gl=s("li"),At=r("모니터링"),Ce=c(),P=s("h2"),Ut=r("UseCases"),He=c(),nl=s("ul"),$=s("li"),Ct=r("the most valuable "),Pl=s("code"),Ht=r("mission-critical"),Tt=r(" workloads in any software company are long-running and tie together multiple services"),Te=c(),O=s("h3"),St=r("business transactions"),Se=c(),fl=s("ul"),$l=s("li"),Dt=r("reliability, consistency, failure compensation long running operations and business transactions for your must critical transfers"),De=c(),j=s("h3"),Wt=r("Coinbase"),We=c(),cl=s("p"),M=s("a"),qt=r("link"),qe=c(),ul=s("ul"),Ol=s("li"),Gt=r(`coinbase processes millions of crypto transactions every day.
From their users point of view, each transactions is reduced to a binary result of succeeded or failed`),Ge=c(),jl=new Ei(!1),Ml=c(),_=s("ul"),Fl=s("li"),Pt=r("if a step fails the tx until steps which were already executed are rolled back"),$t=c(),Nl=s("li"),Ot=r(`this need to rollback is traditionally accomplished using SAGA
-> a common pattern for handling rollback in distributed tx`),jt=c(),Rl=s("li"),Mt=r("coinbase relied on custom engine, but when teams began trying to extend the system to be useful in other domains things became painful. each new use case the system needed to support translated into a large amount of plumbing(*배관 시설) and developer work."),Ft=c(),Bl=s("li"),Nt=r("so coinbase searching for answers"),Pe=c(),Ql=new Ei(!1),Zl=c(),pl=s("ul"),dl=s("li"),Rt=r("aws step function development models forced users to predefine all of their possible execution path upfront "),F=s("ul"),y=s("li"),Bt=r("this is a real problem in the "),zl=s("code"),Qt=r("SAGAS"),Zt=r(" context, since compensation logic is required for each step which can potentially fail, With step functions this meant that each step required one or more prebuilt DAGs to handle their potential failures, if your "),Jl=s("code"),zt=r("SAGAS"),Jt=r(" consist of a few simple steps pre building DAGs might be feasible, but as complexity increases the overhead becomes enormous"),Kt=c(),Kl=s("li"),Xt=r("cf) DAG: directed acyclic graph: 방향성을 가진 비순환 그래프, 각각의 단계를 노드로 표현하고 이들 사이의 종속성과 실행 순서를 화살표로 표현"),$e=c(),N=s("h3"),Vt=r("Uber"),Oe=c(),R=s("h2"),Yt=r("etc"),je=c(),B=s("h3"),gt=r("HashiCorp"),Me=c(),ml=s("blockquote"),w=s("ul"),Xl=s("li"),ls=r("HashiCorp needed to build long-running, reliable, fault-tolerant tasks for the HashiCorp Cloud Platform."),es=c(),Vl=s("li"),ts=r("Temporal’s technology satisfied all of these requirements out of the box and allowed our developers to focus on business logic."),ss=c(),Yl=s("li"),is=r("Without Temporal’s technology, we would’ve spent a significant amount of time rebuilding Temporal and would’ve very likely done a worse job."),Fe=c(),Q=s("h3"),os=r("Netflix"),Ne=c(),Z=s("h3"),as=r("Stripe"),Re=c(),z=s("h3"),rs=r("Checker"),Be=c(),U=s("ul"),gl=s("li"),ns=r("미국 범죄기록(?) 조회 플랫폼"),fs=c(),le=s("li"),cs=r("미국에서 해당 기록을 조회하는데 오래 걸림(~15일)  -> long running"),Qe=c(),J=s("h3"),us=r("yum"),Ze=c(),K=s("h2"),ps=r("Temporal vs others"),ze=c(),X=s("h4"),ds=r("temporal"),Je=c(),C=s("ul"),vl=s("li"),ms=r("pros:"),L=s("ul"),ee=s("li"),vs=r("장기 실행되는 워크플로우에 대한 내결함성, 유지관리, 상태 추적등을 지원"),hs=c(),te=s("li"),_s=r("업무 프로세스를 코드로 모델링 -> 복잡한 비지니스 관리하기 쉬움"),Es=c(),se=s("li"),bs=r("activity와 workflow가 실패하더라도 자동적으로 재시도"),ys=c(),hl=s("li"),ws=r("cons:"),V=s("ul"),ie=s("li"),Ls=r(`서버와 클라이언트를 모두 관리 해야 됨으로 운영 부하
-> temporal cloud`),ks=c(),oe=s("li"),Is=r(`서버리스 환경에서 사용하기 어려울 수 있음
-> client에서 풀링을 사용하기 때문에 람다환경과 안맞을 수 있음`),Ke=c(),Y=s("h4"),xs=r("sqs"),Xe=c(),H=s("ul"),_l=s("li"),As=r("pros:"),k=s("ul"),ae=s("li"),Us=r("분산 시스템에서 메시지를 안정적으로"),Cs=c(),re=s("li"),Hs=r("대기열 메시징에 대해 높은 확장성과 내구성"),Ts=c(),ne=s("li"),Ss=r("완전히 관리되는 서비스 -> 인프라 부담 적음"),Ds=c(),El=s("li"),Ws=r("cons:"),g=s("ul"),fe=s("li"),qs=r("복잡한 워크프롤우 관리나 상태 추적 기능이 없음"),Gs=c(),ce=s("li"),Ps=r("메시지 처리가 순차적이지 않을 수 있으며, 중복 처리 발생 가능성(멱등성 이슈)  -> 상태 관리 어렵"),Ve=c(),ll=s("h4"),$s=r("kafka"),Ye=c(),T=s("ul"),bl=s("li"),Os=r("pros"),I=s("ul"),ue=s("li"),js=r("실시간 데이터를 스트리밍 처리하는데 특화"),Ms=c(),pe=s("li"),Fs=r("대용량 데이터 처리에 대한 높은 처리량과 성능 지원"),Ns=c(),de=s("li"),Rs=r("데이터 레코드에 대한 내구성 & 장애 복구"),Bs=c(),yl=s("li"),Qs=r("cons"),el=s("ul"),me=s("li"),Zs=r("설정과 운영 부담"),zs=c(),ve=s("li"),Js=r("메시지 삭제 시점 관리, 파티셔닝, 복제 등 세부 설정 필요"),ge=c(),tl=s("h4"),Ks=r("step function"),lt=c(),S=s("ul"),wl=s("li"),Xs=r("pros"),x=s("ul"),he=s("li"),Vs=r("복잡한 업무 프로세스를 모델링 & 관리"),Ys=c(),_e=s("li"),gs=r("aws와 통합이 잘 되어 있음"),li=c(),Ee=s("li"),ei=r("인프라 관리 부담이 적음"),ti=c(),Ll=s("li"),si=r("cons"),sl=s("ul"),be=s("li"),ii=r("비용 부담"),oi=c(),ye=s("li"),ai=r("복잡한 애플리케이션에 적합하지 않음 -> json 기반 시스템은 복잡한 로직을 효율적으로 표현하기 어려움"),et=c(),kl=s("p"),il=s("a"),ri=r("https://www.grandeur.dev/blog/temporal-and-architecture-shift-at-grandeur-backend"),tt=c(),we=new Ei(!1),Le=jo(),this.h()},l(l){p=i(l,"H2",{id:!0});var a=o(p);E=n(a,"What is Temporal"),a.forEach(e),b=u(l),v=i(l,"UL",{});var Il=o(v);d=i(Il,"LI",{});var ni=o(d);h=i(ni,"CODE",{});var wi=o(h);al=n(wi,"Uber Cadence"),wi.forEach(e),vt=n(ni,"의 fork open service"),ni.forEach(e),ht=u(Il),Sl=i(Il,"LI",{});var Li=o(Sl);_t=n(Li,"Temporal은 분산 이벤트 워크플로우를 실행하는데 최적화된 완전 관리 서비스"),Li.forEach(e),Et=u(Il),Dl=i(Il,"LI",{});var ki=o(Dl);bt=n(ki,"강력한 상태 관리, 워크플로우 재시작 및 오류 처리 기능을 제공"),ki.forEach(e),Il.forEach(e),ke=u(l),W=i(l,"H3",{id:!0});var Ii=o(W);yt=n(Ii,"More Detail"),Ii.forEach(e),Ie=u(l),q=i(l,"H4",{id:!0});var xi=o(q);wt=n(xi,"temporal client"),xi.forEach(e),xe=u(l),rl=i(l,"UL",{});var Ai=o(rl);Wl=i(Ai,"LI",{});var Ui=o(Wl);Lt=n(Ui,"워크플로우를 시작하고 상태를 확인하고 작업을 완료"),Ui.forEach(e),Ai.forEach(e),Ae=u(l),G=i(l,"H4",{id:!0});var Ci=o(G);kt=n(Ci,"temporal server"),Ci.forEach(e),Ue=u(l),A=i(l,"UL",{});var st=o(A);ql=i(st,"LI",{});var Hi=o(ql);It=n(Hi,"워크플로우를 저장 관리"),Hi.forEach(e),xt=u(st),Gl=i(st,"LI",{});var Ti=o(Gl);At=n(Ti,"모니터링"),Ti.forEach(e),st.forEach(e),Ce=u(l),P=i(l,"H2",{id:!0});var Si=o(P);Ut=n(Si,"UseCases"),Si.forEach(e),He=u(l),nl=i(l,"UL",{});var Di=o(nl);$=i(Di,"LI",{});var it=o($);Ct=n(it,"the most valuable "),Pl=i(it,"CODE",{});var Wi=o(Pl);Ht=n(Wi,"mission-critical"),Wi.forEach(e),Tt=n(it," workloads in any software company are long-running and tie together multiple services"),it.forEach(e),Di.forEach(e),Te=u(l),O=i(l,"H3",{id:!0});var qi=o(O);St=n(qi,"business transactions"),qi.forEach(e),Se=u(l),fl=i(l,"UL",{});var Gi=o(fl);$l=i(Gi,"LI",{});var Pi=o($l);Dt=n(Pi,"reliability, consistency, failure compensation long running operations and business transactions for your must critical transfers"),Pi.forEach(e),Gi.forEach(e),De=u(l),j=i(l,"H3",{id:!0});var $i=o(j);Wt=n($i,"Coinbase"),$i.forEach(e),We=u(l),cl=i(l,"P",{});var Oi=o(cl);M=i(Oi,"A",{href:!0,rel:!0});var ji=o(M);qt=n(ji,"link"),ji.forEach(e),Oi.forEach(e),qe=u(l),ul=i(l,"UL",{});var Mi=o(ul);Ol=i(Mi,"LI",{});var Fi=o(Ol);Gt=n(Fi,`coinbase processes millions of crypto transactions every day.
From their users point of view, each transactions is reduced to a binary result of succeeded or failed`),Fi.forEach(e),Mi.forEach(e),Ge=u(l),jl=bi(l,!1),Ml=u(l),_=i(l,"UL",{});var D=o(_);Fl=i(D,"LI",{});var Ni=o(Fl);Pt=n(Ni,"if a step fails the tx until steps which were already executed are rolled back"),Ni.forEach(e),$t=u(D),Nl=i(D,"LI",{});var Ri=o(Nl);Ot=n(Ri,`this need to rollback is traditionally accomplished using SAGA
-> a common pattern for handling rollback in distributed tx`),Ri.forEach(e),jt=u(D),Rl=i(D,"LI",{});var Bi=o(Rl);Mt=n(Bi,"coinbase relied on custom engine, but when teams began trying to extend the system to be useful in other domains things became painful. each new use case the system needed to support translated into a large amount of plumbing(*배관 시설) and developer work."),Bi.forEach(e),Ft=u(D),Bl=i(D,"LI",{});var Qi=o(Bl);Nt=n(Qi,"so coinbase searching for answers"),Qi.forEach(e),D.forEach(e),Pe=u(l),Ql=bi(l,!1),Zl=u(l),pl=i(l,"UL",{});var Zi=o(pl);dl=i(Zi,"LI",{});var fi=o(dl);Rt=n(fi,"aws step function development models forced users to predefine all of their possible execution path upfront "),F=i(fi,"UL",{});var ot=o(F);y=i(ot,"LI",{});var xl=o(y);Bt=n(xl,"this is a real problem in the "),zl=i(xl,"CODE",{});var zi=o(zl);Qt=n(zi,"SAGAS"),zi.forEach(e),Zt=n(xl," context, since compensation logic is required for each step which can potentially fail, With step functions this meant that each step required one or more prebuilt DAGs to handle their potential failures, if your "),Jl=i(xl,"CODE",{});var Ji=o(Jl);zt=n(Ji,"SAGAS"),Ji.forEach(e),Jt=n(xl," consist of a few simple steps pre building DAGs might be feasible, but as complexity increases the overhead becomes enormous"),xl.forEach(e),Kt=u(ot),Kl=i(ot,"LI",{});var Ki=o(Kl);Xt=n(Ki,"cf) DAG: directed acyclic graph: 방향성을 가진 비순환 그래프, 각각의 단계를 노드로 표현하고 이들 사이의 종속성과 실행 순서를 화살표로 표현"),Ki.forEach(e),ot.forEach(e),fi.forEach(e),Zi.forEach(e),$e=u(l),N=i(l,"H3",{id:!0});var Xi=o(N);Vt=n(Xi,"Uber"),Xi.forEach(e),Oe=u(l),R=i(l,"H2",{id:!0});var Vi=o(R);Yt=n(Vi,"etc"),Vi.forEach(e),je=u(l),B=i(l,"H3",{id:!0});var Yi=o(B);gt=n(Yi,"HashiCorp"),Yi.forEach(e),Me=u(l),ml=i(l,"BLOCKQUOTE",{});var gi=o(ml);w=i(gi,"UL",{});var Al=o(w);Xl=i(Al,"LI",{});var lo=o(Xl);ls=n(lo,"HashiCorp needed to build long-running, reliable, fault-tolerant tasks for the HashiCorp Cloud Platform."),lo.forEach(e),es=u(Al),Vl=i(Al,"LI",{});var eo=o(Vl);ts=n(eo,"Temporal’s technology satisfied all of these requirements out of the box and allowed our developers to focus on business logic."),eo.forEach(e),ss=u(Al),Yl=i(Al,"LI",{});var to=o(Yl);is=n(to,"Without Temporal’s technology, we would’ve spent a significant amount of time rebuilding Temporal and would’ve very likely done a worse job."),to.forEach(e),Al.forEach(e),gi.forEach(e),Fe=u(l),Q=i(l,"H3",{id:!0});var so=o(Q);os=n(so,"Netflix"),so.forEach(e),Ne=u(l),Z=i(l,"H3",{id:!0});var io=o(Z);as=n(io,"Stripe"),io.forEach(e),Re=u(l),z=i(l,"H3",{id:!0});var oo=o(z);rs=n(oo,"Checker"),oo.forEach(e),Be=u(l),U=i(l,"UL",{});var at=o(U);gl=i(at,"LI",{});var ao=o(gl);ns=n(ao,"미국 범죄기록(?) 조회 플랫폼"),ao.forEach(e),fs=u(at),le=i(at,"LI",{});var ro=o(le);cs=n(ro,"미국에서 해당 기록을 조회하는데 오래 걸림(~15일)  -> long running"),ro.forEach(e),at.forEach(e),Qe=u(l),J=i(l,"H3",{id:!0});var no=o(J);us=n(no,"yum"),no.forEach(e),Ze=u(l),K=i(l,"H2",{id:!0});var fo=o(K);ps=n(fo,"Temporal vs others"),fo.forEach(e),ze=u(l),X=i(l,"H4",{id:!0});var co=o(X);ds=n(co,"temporal"),co.forEach(e),Je=u(l),C=i(l,"UL",{});var rt=o(C);vl=i(rt,"LI",{});var ci=o(vl);ms=n(ci,"pros:"),L=i(ci,"UL",{});var Ul=o(L);ee=i(Ul,"LI",{});var uo=o(ee);vs=n(uo,"장기 실행되는 워크플로우에 대한 내결함성, 유지관리, 상태 추적등을 지원"),uo.forEach(e),hs=u(Ul),te=i(Ul,"LI",{});var po=o(te);_s=n(po,"업무 프로세스를 코드로 모델링 -> 복잡한 비지니스 관리하기 쉬움"),po.forEach(e),Es=u(Ul),se=i(Ul,"LI",{});var mo=o(se);bs=n(mo,"activity와 workflow가 실패하더라도 자동적으로 재시도"),mo.forEach(e),Ul.forEach(e),ci.forEach(e),ys=u(rt),hl=i(rt,"LI",{});var ui=o(hl);ws=n(ui,"cons:"),V=i(ui,"UL",{});var nt=o(V);ie=i(nt,"LI",{});var vo=o(ie);Ls=n(vo,`서버와 클라이언트를 모두 관리 해야 됨으로 운영 부하
-> temporal cloud`),vo.forEach(e),ks=u(nt),oe=i(nt,"LI",{});var ho=o(oe);Is=n(ho,`서버리스 환경에서 사용하기 어려울 수 있음
-> client에서 풀링을 사용하기 때문에 람다환경과 안맞을 수 있음`),ho.forEach(e),nt.forEach(e),ui.forEach(e),rt.forEach(e),Ke=u(l),Y=i(l,"H4",{id:!0});var _o=o(Y);xs=n(_o,"sqs"),_o.forEach(e),Xe=u(l),H=i(l,"UL",{});var ft=o(H);_l=i(ft,"LI",{});var pi=o(_l);As=n(pi,"pros:"),k=i(pi,"UL",{});var Cl=o(k);ae=i(Cl,"LI",{});var Eo=o(ae);Us=n(Eo,"분산 시스템에서 메시지를 안정적으로"),Eo.forEach(e),Cs=u(Cl),re=i(Cl,"LI",{});var bo=o(re);Hs=n(bo,"대기열 메시징에 대해 높은 확장성과 내구성"),bo.forEach(e),Ts=u(Cl),ne=i(Cl,"LI",{});var yo=o(ne);Ss=n(yo,"완전히 관리되는 서비스 -> 인프라 부담 적음"),yo.forEach(e),Cl.forEach(e),pi.forEach(e),Ds=u(ft),El=i(ft,"LI",{});var di=o(El);Ws=n(di,"cons:"),g=i(di,"UL",{});var ct=o(g);fe=i(ct,"LI",{});var wo=o(fe);qs=n(wo,"복잡한 워크프롤우 관리나 상태 추적 기능이 없음"),wo.forEach(e),Gs=u(ct),ce=i(ct,"LI",{});var Lo=o(ce);Ps=n(Lo,"메시지 처리가 순차적이지 않을 수 있으며, 중복 처리 발생 가능성(멱등성 이슈)  -> 상태 관리 어렵"),Lo.forEach(e),ct.forEach(e),di.forEach(e),ft.forEach(e),Ve=u(l),ll=i(l,"H4",{id:!0});var ko=o(ll);$s=n(ko,"kafka"),ko.forEach(e),Ye=u(l),T=i(l,"UL",{});var ut=o(T);bl=i(ut,"LI",{});var mi=o(bl);Os=n(mi,"pros"),I=i(mi,"UL",{});var Hl=o(I);ue=i(Hl,"LI",{});var Io=o(ue);js=n(Io,"실시간 데이터를 스트리밍 처리하는데 특화"),Io.forEach(e),Ms=u(Hl),pe=i(Hl,"LI",{});var xo=o(pe);Fs=n(xo,"대용량 데이터 처리에 대한 높은 처리량과 성능 지원"),xo.forEach(e),Ns=u(Hl),de=i(Hl,"LI",{});var Ao=o(de);Rs=n(Ao,"데이터 레코드에 대한 내구성 & 장애 복구"),Ao.forEach(e),Hl.forEach(e),mi.forEach(e),Bs=u(ut),yl=i(ut,"LI",{});var vi=o(yl);Qs=n(vi,"cons"),el=i(vi,"UL",{});var pt=o(el);me=i(pt,"LI",{});var Uo=o(me);Zs=n(Uo,"설정과 운영 부담"),Uo.forEach(e),zs=u(pt),ve=i(pt,"LI",{});var Co=o(ve);Js=n(Co,"메시지 삭제 시점 관리, 파티셔닝, 복제 등 세부 설정 필요"),Co.forEach(e),pt.forEach(e),vi.forEach(e),ut.forEach(e),ge=u(l),tl=i(l,"H4",{id:!0});var Ho=o(tl);Ks=n(Ho,"step function"),Ho.forEach(e),lt=u(l),S=i(l,"UL",{});var dt=o(S);wl=i(dt,"LI",{});var hi=o(wl);Xs=n(hi,"pros"),x=i(hi,"UL",{});var Tl=o(x);he=i(Tl,"LI",{});var To=o(he);Vs=n(To,"복잡한 업무 프로세스를 모델링 & 관리"),To.forEach(e),Ys=u(Tl),_e=i(Tl,"LI",{});var So=o(_e);gs=n(So,"aws와 통합이 잘 되어 있음"),So.forEach(e),li=u(Tl),Ee=i(Tl,"LI",{});var Do=o(Ee);ei=n(Do,"인프라 관리 부담이 적음"),Do.forEach(e),Tl.forEach(e),hi.forEach(e),ti=u(dt),Ll=i(dt,"LI",{});var _i=o(Ll);si=n(_i,"cons"),sl=i(_i,"UL",{});var mt=o(sl);be=i(mt,"LI",{});var Wo=o(be);ii=n(Wo,"비용 부담"),Wo.forEach(e),oi=u(mt),ye=i(mt,"LI",{});var qo=o(ye);ai=n(qo,"복잡한 애플리케이션에 적합하지 않음 -> json 기반 시스템은 복잡한 로직을 효율적으로 표현하기 어려움"),qo.forEach(e),mt.forEach(e),_i.forEach(e),dt.forEach(e),et=u(l),kl=i(l,"P",{});var Go=o(kl);il=i(Go,"A",{href:!0,rel:!0});var Po=o(il);ri=n(Po,"https://www.grandeur.dev/blog/temporal-and-architecture-shift-at-grandeur-backend"),Po.forEach(e),Go.forEach(e),tt=u(l),we=bi(l,!1),Le=jo(),this.h()},h(){m(p,"id","what-is-temporal"),m(W,"id","more-detail"),m(q,"id","temporal-client"),m(G,"id","temporal-server"),m(P,"id","usecases"),m(O,"id","business-transactions"),m(j,"id","coinbase"),m(M,"href","https://temporal.io/case-studies/reliable-crypto-transactions-at-coinbase"),m(M,"rel","nofollow"),jl.a=Ml,Ql.a=Zl,m(N,"id","uber"),m(R,"id","etc"),m(B,"id","hashicorp"),m(Q,"id","netflix"),m(Z,"id","stripe"),m(z,"id","checker"),m(J,"id","yum"),m(K,"id","temporal-vs-others"),m(X,"id","temporal"),m(Y,"id","sqs"),m(ll,"id","kafka"),m(tl,"id","step-function"),m(il,"href","https://www.grandeur.dev/blog/temporal-and-architecture-shift-at-grandeur-backend"),m(il,"rel","nofollow"),we.a=Le},m(l,a){f(l,p,a),t(p,E),f(l,b,a),f(l,v,a),t(v,d),t(d,h),t(h,al),t(d,vt),t(v,ht),t(v,Sl),t(Sl,_t),t(v,Et),t(v,Dl),t(Dl,bt),f(l,ke,a),f(l,W,a),t(W,yt),f(l,Ie,a),f(l,q,a),t(q,wt),f(l,xe,a),f(l,rl,a),t(rl,Wl),t(Wl,Lt),f(l,Ae,a),f(l,G,a),t(G,kt),f(l,Ue,a),f(l,A,a),t(A,ql),t(ql,It),t(A,xt),t(A,Gl),t(Gl,At),f(l,Ce,a),f(l,P,a),t(P,Ut),f(l,He,a),f(l,nl,a),t(nl,$),t($,Ct),t($,Pl),t(Pl,Ht),t($,Tt),f(l,Te,a),f(l,O,a),t(O,St),f(l,Se,a),f(l,fl,a),t(fl,$l),t($l,Dt),f(l,De,a),f(l,j,a),t(j,Wt),f(l,We,a),f(l,cl,a),t(cl,M),t(M,qt),f(l,qe,a),f(l,ul,a),t(ul,Ol),t(Ol,Gt),f(l,Ge,a),jl.m(Fo,l,a),f(l,Ml,a),f(l,_,a),t(_,Fl),t(Fl,Pt),t(_,$t),t(_,Nl),t(Nl,Ot),t(_,jt),t(_,Rl),t(Rl,Mt),t(_,Ft),t(_,Bl),t(Bl,Nt),f(l,Pe,a),Ql.m(No,l,a),f(l,Zl,a),f(l,pl,a),t(pl,dl),t(dl,Rt),t(dl,F),t(F,y),t(y,Bt),t(y,zl),t(zl,Qt),t(y,Zt),t(y,Jl),t(Jl,zt),t(y,Jt),t(F,Kt),t(F,Kl),t(Kl,Xt),f(l,$e,a),f(l,N,a),t(N,Vt),f(l,Oe,a),f(l,R,a),t(R,Yt),f(l,je,a),f(l,B,a),t(B,gt),f(l,Me,a),f(l,ml,a),t(ml,w),t(w,Xl),t(Xl,ls),t(w,es),t(w,Vl),t(Vl,ts),t(w,ss),t(w,Yl),t(Yl,is),f(l,Fe,a),f(l,Q,a),t(Q,os),f(l,Ne,a),f(l,Z,a),t(Z,as),f(l,Re,a),f(l,z,a),t(z,rs),f(l,Be,a),f(l,U,a),t(U,gl),t(gl,ns),t(U,fs),t(U,le),t(le,cs),f(l,Qe,a),f(l,J,a),t(J,us),f(l,Ze,a),f(l,K,a),t(K,ps),f(l,ze,a),f(l,X,a),t(X,ds),f(l,Je,a),f(l,C,a),t(C,vl),t(vl,ms),t(vl,L),t(L,ee),t(ee,vs),t(L,hs),t(L,te),t(te,_s),t(L,Es),t(L,se),t(se,bs),t(C,ys),t(C,hl),t(hl,ws),t(hl,V),t(V,ie),t(ie,Ls),t(V,ks),t(V,oe),t(oe,Is),f(l,Ke,a),f(l,Y,a),t(Y,xs),f(l,Xe,a),f(l,H,a),t(H,_l),t(_l,As),t(_l,k),t(k,ae),t(ae,Us),t(k,Cs),t(k,re),t(re,Hs),t(k,Ts),t(k,ne),t(ne,Ss),t(H,Ds),t(H,El),t(El,Ws),t(El,g),t(g,fe),t(fe,qs),t(g,Gs),t(g,ce),t(ce,Ps),f(l,Ve,a),f(l,ll,a),t(ll,$s),f(l,Ye,a),f(l,T,a),t(T,bl),t(bl,Os),t(bl,I),t(I,ue),t(ue,js),t(I,Ms),t(I,pe),t(pe,Fs),t(I,Ns),t(I,de),t(de,Rs),t(T,Bs),t(T,yl),t(yl,Qs),t(yl,el),t(el,me),t(me,Zs),t(el,zs),t(el,ve),t(ve,Js),f(l,ge,a),f(l,tl,a),t(tl,Ks),f(l,lt,a),f(l,S,a),t(S,wl),t(wl,Xs),t(wl,x),t(x,he),t(he,Vs),t(x,Ys),t(x,_e),t(_e,gs),t(x,li),t(x,Ee),t(Ee,ei),t(S,ti),t(S,Ll),t(Ll,si),t(Ll,sl),t(sl,be),t(be,ii),t(sl,oi),t(sl,ye),t(ye,ai),f(l,et,a),f(l,kl,a),t(kl,il),t(il,ri),f(l,tt,a),we.m(Ro,l,a),f(l,Le,a)},p:la,d(l){l&&e(p),l&&e(b),l&&e(v),l&&e(ke),l&&e(W),l&&e(Ie),l&&e(q),l&&e(xe),l&&e(rl),l&&e(Ae),l&&e(G),l&&e(Ue),l&&e(A),l&&e(Ce),l&&e(P),l&&e(He),l&&e(nl),l&&e(Te),l&&e(O),l&&e(Se),l&&e(fl),l&&e(De),l&&e(j),l&&e(We),l&&e(cl),l&&e(qe),l&&e(ul),l&&e(Ge),l&&jl.d(),l&&e(Ml),l&&e(_),l&&e(Pe),l&&Ql.d(),l&&e(Zl),l&&e(pl),l&&e($e),l&&e(N),l&&e(Oe),l&&e(R),l&&e(je),l&&e(B),l&&e(Me),l&&e(ml),l&&e(Fe),l&&e(Q),l&&e(Ne),l&&e(Z),l&&e(Re),l&&e(z),l&&e(Be),l&&e(U),l&&e(Qe),l&&e(J),l&&e(Ze),l&&e(K),l&&e(ze),l&&e(X),l&&e(Je),l&&e(C),l&&e(Ke),l&&e(Y),l&&e(Xe),l&&e(H),l&&e(Ve),l&&e(ll),l&&e(Ye),l&&e(T),l&&e(ge),l&&e(tl),l&&e(lt),l&&e(S),l&&e(et),l&&e(kl),l&&e(tt),l&&e(Le),l&&we.d()}}}function sa(ol){let p,E;const b=[ol[0],Mo];let v={$$slots:{default:[ta]},$$scope:{ctx:ol}};for(let d=0;d<b.length;d+=1)v=yi(v,b[d]);return p=new ea({props:v}),{c(){zo(p.$$.fragment)},l(d){Jo(p.$$.fragment,d)},m(d,h){Ko(p,d,h),E=!0},p(d,[h]){const al=h&1?Xo(b,[h&1&&$o(d[0]),h&0&&$o(Mo)]):{};h&2&&(al.$$scope={dirty:h,ctx:d}),p.$set(al)},i(d){E||(Vo(p.$$.fragment,d),E=!0)},o(d){Yo(p.$$.fragment,d),E=!1},d(d){go(p,d)}}}const Mo={title:"Temporal study",description:"temporal에 대해 알아보자 01",date:"2023-07-03",categories:["cadence","temporal"],published:!0};function ia(ol,p,E){return ol.$$set=b=>{E(0,p=yi(yi({},p),Oo(b)))},p=Oo(p),[p]}class ra extends Bo{constructor(p){super(),Qo(this,p,ia,sa,Zo,{})}}export{ra as default,Mo as metadata};
